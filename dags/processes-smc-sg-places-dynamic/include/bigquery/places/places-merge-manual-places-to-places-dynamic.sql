CREATE TEMP TABLE
info_to_insert
AS

SELECT manual_places_staging.*
FROM `{{ var.value.env_project }}.{{ params['smc_sg_places_dataset'] }}.{{ params['places_manual_table'] }}` manual_places_staging
LEFT JOIN(
  SELECT fk_sgbrands, long_lat_point, true AS in_pd
  FROM `{{ var.value.env_project }}.{{ params['smc_sg_places_dataset'] }}.{{ params['places_dynamic_table'] }}`
) places_dynamic
ON places_dynamic.fk_sgbrands = manual_places_staging.fk_sgbrands
AND ST_DISTANCE(places_dynamic.long_lat_point, manual_places_staging.long_lat_point) < 200
WHERE in_pd IS NULL;



MERGE INTO
  `{{ var.value.env_project }}.{{ params['smc_sg_places_dataset'] }}.{{ params['places_dynamic_table'] }}` AS target
  USING info_to_insert AS source
  ON target.pid=source.pid
WHEN MATCHED THEN
UPDATE SET
  pid = source.pid,
  fk_sgbrands = source.fk_sgbrands,
  brands = source.brands,
  top_category = source.top_category,
  sub_category = source.sub_category,
  naics_code = source.naics_code,
  site_id = source.site_id,
  latitude = source.latitude,
  longitude = source.longitude,
  street_address = source.street_address,
  city = source.city,
  region = source.region,
  postal_code = source.postal_code,
  category_tags = source.category_tags,
  polygon_class = source.polygon_class,
  enclosed = source.enclosed,
  iso_country_code = source.iso_country_code,
  region_id = source.region_id,
  long_lat_point = source.long_lat_point,
  fk_parents = source.fk_parents,
  standalone_bool = source.standalone_bool,
  child_bool = source.child_bool,
  parent_bool = source.parent_bool,
  polygon_area_sq_ft = source.polygon_area_sq_ft,
  industry = source.industry,
  timezone = source.timezone,
  phone_number = CAST(source.phone_number AS STRING),
  is_synthetic = source.is_synthetic,
  includes_parking_lot = source.includes_parking_lot,
  opening_date = source.opening_date,
  closing_date = source.closing_date,
  name = source.name,
  polygon_wkt = source.polygon_wkt,
  simplified_polygon_wkt = source.simplified_polygon_wkt,
  simplified_wkt_10_buffer = source.simplified_wkt_10_buffer,
  fk_parents_override = source.fk_parents_override,
  standalone_bool_override = source.standalone_bool_override,
  child_bool_override = source.child_bool_override,
  parent_bool_override = source.parent_bool_override,
  open_hours = source.open_hours
WHEN NOT MATCHED THEN
INSERT
(
  pid,
  fk_sgbrands,
  brands,
  top_category,
  sub_category,
  naics_code,
  site_id,
  latitude,
  longitude,
  street_address,
  city,
  region,
  postal_code,
  category_tags,
  polygon_class,
  enclosed,
  iso_country_code,
  region_id,
  long_lat_point,
  fk_parents,
  standalone_bool,
  child_bool,
  parent_bool,
  polygon_area_sq_ft,
  industry,
  timezone,
  phone_number,
  is_synthetic,
  includes_parking_lot,
  opening_date,
  closing_date,
  name,
  polygon_wkt,
  simplified_polygon_wkt,
  simplified_wkt_10_buffer,
  fk_parents_override,
  standalone_bool_override,
  child_bool_override,
  parent_bool_override,
  open_hours,
  tracking_closed_since,
  geometry_type,
  census_code,
  domains,
  mall_gla,
  postal_code_extra,
  website,
  sensitive,
  sg_id,
  naics_industry
)
VALUES
(
  source.pid,
  source.fk_sgbrands,
  source.brands,
  source.top_category,
  source.sub_category,
  source.naics_code,
  source.site_id,
  source.latitude,
  source.longitude,
  source.street_address,
  source.city,
  source.region,
  source.postal_code,
  source.category_tags,
  source.polygon_class,
  source.enclosed,
  source.iso_country_code,
  source.region_id,
  source.long_lat_point,
  source.fk_parents,
  source.standalone_bool,
  source.child_bool,
  source.parent_bool,
  source.polygon_area_sq_ft,
  source.industry,
  source.timezone,
  CAST(source.phone_number AS STRING),
  source.is_synthetic,
  source.includes_parking_lot,
  source.opening_date,
  source.closing_date,
  source.name,
  source.polygon_wkt,
  source.simplified_polygon_wkt,
  source.simplified_wkt_10_buffer,
  source.fk_parents_override,
  source.standalone_bool_override,
  source.child_bool_override,
  source.parent_bool_override,
  source.open_hours,
  NULL,
  'POLYGON',
  NULL,
  '[]',
  NULL,
  NULL,
  NULL,
  FALSE,
  'manually_added',
  CAST(LEFT(CAST(source.naics_code AS STRING), 2) as int64)
)
