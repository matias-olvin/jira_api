CREATE OR REPLACE PROCEDURE `storage-prod-olvin-com.procedures.geoscaling_ml_input`(
    destination_table STRING,
    start_date STRING,
    end_date STRING,
    poi_visits_dataset STRING
)
OPTIONS(
   description="""Add data to quality model input table to be sued in geoscaling."""
 )
BEGIN
EXECUTE IMMEDIATE FORMAT("""
INSERT `%s` (
  local_date,
  device_id,
  visit_ts,
  duration,
  s2_token,
  vc_ratio,
  ch_ratio,
  n_hits,
  accuracy,
  confidence,
  density_7,
  density_8,
  density_9
)
SELECT
  local_date,
  device_id,
  visit_ts,
  duration,
  s2_token,
  SUM(visit_score_opening) OVER (PARTITION BY local_date, s2_token, device_id) / GREATEST(n_clusters, 1) AS vc_ratio,
  n_clusters / GREATEST(n_hits, 1) AS ch_ratio,
  n_hits,
  accuracy,
  confidence,
  density_7,
  density_8,
  density_9,
FROM
(SELECT
  local_date,
  device_id,
  visit_ts,
  duration,
  ANY_VALUE(`storage-prod-olvin-com.functions`.point_level2token(lat_long_visit_point, 8)) AS s2_token,
  CAST(ANY_VALUE(quality_stats.n_hits) AS INT64) AS n_hits,
  CAST(ANY_VALUE(quality_stats.n_clusters) AS INT64) AS n_clusters,
  ANY_VALUE(quality_stats.confidence) AS confidence,
  ANY_VALUE(quality_stats.accuracy) AS accuracy,
  CAST(ANY_VALUE(quality_stats.n_cluster_geohash_7) AS INT64) AS density_7,
  CAST(ANY_VALUE(quality_stats.n_cluster_geohash_8) AS INT64) AS density_8,
  CAST(ANY_VALUE(quality_stats.n_cluster_geohash_9) AS INT64) AS density_9,
  SUM(visit_score.opening) AS visit_score_opening,
FROM
 `%s.*`
WHERE
 local_date >= "%s" AND local_date < "%s" AND parent_bool = FALSE
GROUP BY
  local_date,
  device_id,
  visit_ts,
  duration
)
""",
destination_table,
poi_visits_dataset,
start_date, end_date);
END